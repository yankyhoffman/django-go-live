x-env: &django-env
  SECRET_KEY: ${SECRET_KEY}
  DEBUG: ${DEBUG}
  ALLOWED_HOSTS: ${ALLOWED_HOSTS}
  TIMEZONE: ${TIMEZONE}
  CELERY_BROKER_URL: ${CELERY_BROKER_URL}
  CELERY_RESULT_BACKEND: ${CELERY_RESULT_BACKEND}
  DB_NAME: ${DB_NAME}
  DB_USER: ${DB_USER}
  DB_PASSWORD: ${DB_PASSWORD}
  DB_HOST: ${DB_HOST}
  DB_PORT: ${DB_PORT}

version: "3.9"
services:
  nginx:
    image: nginx:1.23.3
    ports:
      - "8001:80"
    volumes:
      - ./config/nginx:/etc/nginx/conf.d:ro
      - staticfiles:/home/app/web/staticfiles:ro
    depends_on:
      - web
      - flower
    networks:
      project:
    restart: unless-stopped
  web:
    build: .
    image: project/web:current
    depends_on:
      - db
      - redis
    environment:
      <<: *django-env
    command: ["gunicorn", "conf.wsgi:application", "--bind", "0.0.0.0:8000"]
    networks:
      - project
    volumes:
      - staticfiles:/usr/src/app/staticfiles
    restart: unless-stopped
  redis:
    image: redis:6
    networks:
      - project
    restart: unless-stopped
  db:
    image: postgres:15
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - db-data:/var/lib/postgresql/data
    networks:
      - project
    restart: unless-stopped
  worker:
    image: project/web:current
    command: ["celery", "-A", "conf.celery_app", "worker", "--concurrency" ,"3"]
    environment:
      <<: *django-env
    depends_on:
      - redis
    networks:
      - project
    restart: unless-stopped
  scheduler:
    image: project/web:current
    command: ["celery", "-A", "conf.celery_app", "beat", "--scheduler", "django_celery_beat.schedulers:DatabaseScheduler"]
    environment:
      <<: *django-env
    depends_on:
      - redis
    networks:
      - project
    restart: unless-stopped
  flower:
    image: mher/flower:1.2.0
    command: ["celery", "--broker", "${CELERY_BROKER_URL}", "flower", "--basic_auth", "${FLOWER_USERNAME}:${FLOWER_PASSWORD}"]
    expose:
      - "5555"
    depends_on:
      - redis
    networks:
      - project
    restart: unless-stopped
volumes:
  db-data:
  staticfiles:
networks:
  project:
